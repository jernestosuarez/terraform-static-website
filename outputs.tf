output "cdn_account_id" {
    value = local.settings.cdn_account_id
    description = "Account where the CDN must be created"
}
output "s3_account_id" {
    value = local.settings.s3_account_id
    description = "Account where the S3 bucket must be created"
}
output "project_name" {
    value = local.settings.project_name
    description = "Name of the project to generate some random strings related to it"
}
output "region" {
    value = local.settings.region
    description = "Region for the S3 related stuff. The CDN will be deployed on North Virginia"
}
output "environment" {
    value = local.settings.environment
    description = "Environment for this deployment, the bucket and some random tags and strings will have it attached"
}
output "domain" {
    value = local.settings.domain
    description = "FQDN for deploying this site"
}
output "zone_id" {
    value = local.settings.zone_id
    description = "Zone ID for the ROUTE53 hosting the domain zone. This route 53 lives in the same account than the ACM and the CDN"
}
output "s3_force_destroy" {
    value = local.settings.s3_force_destroy
    description = "Destroy protection for the s3 bucket. Put it to true in case you want to destroy the content of the bucket when this resource is deleted"
}
output "assume_role" {
    value = local.settings.assume_role
    description = "The name of the role used in your multi-account governance policy. By default AWSControlTowerExecution compatible with AWS Control Tower environments with or without AFT"
}
output "cloudfront_origin_access_identity_iam_arns"{
    description = "The IAM arns of the origin access identities created"
    value = module.distribution.cloudfront_origin_access_identity_iam_arns
}
output "cloudfront_origin_access_identity_ids"{
    description = "The IDS of the origin access identities created"
    value = module.distribution.cloudfront_origin_access_identity_ids
}
output "cdn_endpoint" {
    description = "Endpoint generated by the CDN"
    value = module.distribution.cdn_endpoint
}
output "s3_bucket_bucket_domain_name" {
    description = "DNS for generated S3 Bucket"
    value = module.storage.s3_bucket_bucket_domain_name
}
output "acm_certificate_arn" {
    description = "ACM certificate ARN for this domain"
    value = module.certificate.acm_certificate_arn
}
output "s3_bucket_id" {
    description = "ID for generated S3 Bucket"
    value = module.storage.s3_bucket_id
}